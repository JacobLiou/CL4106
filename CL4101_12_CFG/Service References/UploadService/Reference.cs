//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4952
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlugInSample.UploadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UploadService.IUpLoadService")]
    public interface IUpLoadService {
        
        // CODEGEN: 操作 UploadFile 以后生成的消息协定不是 RPC，也不是换行文档。
        [System.ServiceModel.OperationContractAttribute(Action="UploadFile", ReplyAction="http://tempuri.org/IUpLoadService/UploadFileResponse")]
        PlugInSample.UploadService.UploadFileResponse UploadFile(PlugInSample.UploadService.FileUploadMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string SavePath;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(string FileName, string SavePath, string UserName, System.IO.Stream FileData) {
            this.FileName = FileName;
            this.SavePath = SavePath;
            this.UserName = UserName;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IUpLoadServiceChannel : PlugInSample.UploadService.IUpLoadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpLoadServiceClient : System.ServiceModel.ClientBase<PlugInSample.UploadService.IUpLoadService>, PlugInSample.UploadService.IUpLoadService {
        
        public UpLoadServiceClient() {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpLoadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlugInSample.UploadService.UploadFileResponse PlugInSample.UploadService.IUpLoadService.UploadFile(PlugInSample.UploadService.FileUploadMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FileName, string SavePath, string UserName, System.IO.Stream FileData) {
            PlugInSample.UploadService.FileUploadMessage inValue = new PlugInSample.UploadService.FileUploadMessage();
            inValue.FileName = FileName;
            inValue.SavePath = SavePath;
            inValue.UserName = UserName;
            inValue.FileData = FileData;
            PlugInSample.UploadService.UploadFileResponse retVal = ((PlugInSample.UploadService.IUpLoadService)(this)).UploadFile(inValue);
        }
    }
}
